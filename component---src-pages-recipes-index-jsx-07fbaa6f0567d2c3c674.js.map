{"version":3,"sources":["webpack:///./src/components/RelatedRecipes.jsx","webpack:///./src/components/header.jsx","webpack:///./src/components/layout.jsx","webpack:///./src/pages/recipes/index.jsx"],"names":["RelatedRecipies","tag","query","render","data","related","Object","keys","allStrapiRecipe","edges","forEach","id","node","Tags","push","to","Title","replace","toLowerCase","length","Header","siteTitle","className","defaultProps","Layout","children","site","siteMetadata","title","style","margin","maxWidth","padding","paddingTop","Date","getFullYear","href","RecipesIndex","map","document","key","Summary","pageQuery"],"mappings":"8UAkDeA,EA9CS,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAH,OACtB,kBAAC,cAAD,CACEC,MAAK,YAaLC,OAAQ,SAACC,GACP,IAAMC,EAAU,GAgBhB,OAfAC,OAAOC,KAAKH,EAAKI,gBAAgBC,OAAOC,SAAQ,SAACC,GAC3CP,EAAKI,gBAAgBC,MAAME,GAAIC,KAAKC,OAASZ,GAC/CI,EAAQS,KACN,4BACE,kBAAC,OAAD,CAEEC,GAAE,YAAcX,EAAKI,gBAAgBC,MAAME,GAAIC,KAAKI,MAAMC,QAAQ,OAAQ,KAAKC,eAE7Ed,EAAKI,gBAAgBC,MAAME,GAAIC,KAAKI,YAQ9CX,EAAQc,OAEJ,oCACE,+CACEd,GAGJ,IAvCV,UCAIe,G,UAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BAAQC,UAAU,eAChB,yBAAKA,UAAU,sBACb,4BACE,kBAAC,OAAD,CAAMP,GAAG,KACNM,QAWXD,EAAOG,aAAe,CACpBF,UAAW,IAGED,QCXTI,EAAS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAAUxB,EAAU,EAAVA,IACpBG,EAAI,OASV,OACE,oCACE,kBAAC,EAAD,CAAQiB,UAAWjB,EAAKsB,KAAKC,aAAaC,QAC1C,yBACEC,MAAO,CACLC,OAAQ,SACRC,SAAU,IACVC,QAAS,wBACTC,WAAY,IAGd,8BAAOR,GACNxB,EAAM,+BAAO,kBAAC,EAAD,CAAiBA,IAAKA,KAAkB,GACtD,oCAEG,KACA,IAAIiC,MAAOC,cAHd,IAKG,IALH,aAOG,IACD,uBAAGC,KAAK,4BAAR,cAYVZ,EAAOD,aAAe,CACpBtB,KAAK,GAGQuB,O,soBC9BAa,UAzBM,SAAC,GAAD,IAAGjC,EAAH,EAAGA,KAAH,OACnB,kBAAC,IAAD,KACE,4DACA,sDAEA,2CACA,4BACGA,EAAKI,gBAAgBC,MAAM6B,KAAI,SAACC,GAAD,OAC9B,wBAAIC,IAAKD,EAAS3B,KAAKD,IACrB,4BACE,kBAAC,OAAD,CAEEI,GAAE,YAAcwB,EAAS3B,KAAKI,MAAMC,QAAQ,OAAQ,KAAKC,eAEvDqB,EAAS3B,KAAKI,QAGpB,2BAAKuB,EAAS3B,KAAK6B,gBAgBtB,IAAMC,EAAS","file":"component---src-pages-recipes-index-jsx-07fbaa6f0567d2c3c674.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, Link, StaticQuery } from 'gatsby';\n\nconst RelatedRecipies = ({ tag }) => (\n  <StaticQuery\n    query={graphql`\n     query recipeQuery {\n      allStrapiRecipe {\n        edges {\n         node {\n          Title\n          id\n          Tags\n         }\n        }\n       }\n      }\n    `}\n    render={(data) => {\n      const related = [];\n      Object.keys(data.allStrapiRecipe.edges).forEach((id) => {\n        if (data.allStrapiRecipe.edges[id].node.Tags === tag) {\n          related.push(\n            <h3>\n              <Link\n                // @todo refactor the slug to make it more modular\n                to={`/recipes/${data.allStrapiRecipe.edges[id].node.Title.replace(/\\s+/g, '-').toLowerCase()}`}\n              >\n                { data.allStrapiRecipe.edges[id].node.Title }\n              </Link>\n            </h3>,\n          );\n        }\n      });\n\n      return (\n        related.length\n          ? (\n            <>\n              <h2>Related Recipes</h2>\n              { related }\n            </>\n          )\n          : ''\n      );\n    }}\n  />\n);\n\nexport default RelatedRecipies;\n\nRelatedRecipies.propTypes = {\n  tag: PropTypes.string.isRequired,\n};\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport '../sass/components/header.scss';\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"site-header\">\n    <div className=\"site-header__inner\">\n      <h1>\n        <Link to=\"/\">\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport RelatedRecipies from './RelatedRecipes';\n\nimport Header from './header';\n\nconst Layout = ({ children, tag }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: '0 auto',\n          maxWidth: 960,\n          padding: '0px 1.0875rem 1.45rem',\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        {tag ? <aside><RelatedRecipies tag={tag} /></aside> : '' }\n        <footer>\n          Â©\n          {' '}\n          {new Date().getFullYear()}\n          ,\n          {' '}\n          Built with\n          {' '}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  tag: PropTypes.string,\n};\n\nLayout.defaultProps = {\n  tag: false,\n};\n\nexport default Layout;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport Layout from '../../components/layout';\n\nconst RecipesIndex = ({ data }) => (\n  <Layout>\n    <h1>Recipes and Shared Learnings</h1>\n    <p>Placeholder description</p>\n\n    <h2>All Recipes</h2>\n    <ul>\n      {data.allStrapiRecipe.edges.map((document) => (\n        <li key={document.node.id}>\n          <h3>\n            <Link\n              // @todo refactor the slug to make it more modular\n              to={`/recipes/${document.node.Title.replace(/\\s+/g, '-').toLowerCase()}`}\n            >\n              { document.node.Title }\n            </Link>\n          </h3>\n          <p>{ document.node.Summary }</p>\n        </li>\n      ))}\n    </ul>\n\n  </Layout>\n);\n\nexport default RecipesIndex;\n\nRecipesIndex.propTypes = {\n  data: PropTypes.shape({\n    allStrapiRecipe: PropTypes.object,\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allStrapiRecipe {\n      edges {\n        node {\n          Title\n          Body\n          Tags\n          Summary\n          author {\n            username\n          }\n          created_at\n          id\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}