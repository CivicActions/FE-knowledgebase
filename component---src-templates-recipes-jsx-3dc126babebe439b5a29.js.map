{"version":3,"sources":["webpack:///./src/components/author-link.jsx","webpack:///./src/templates/recipes.jsx"],"names":["AuthorLink","uid","name","to","converter","showdown","Converter","ghCompatibleHeaderId","query","RecipeTemplate","recipe","data","strapiRecipes","author","Author","id","username","Title","dangerouslySetInnerHTML","__html","makeHtml","Body"],"mappings":"+MAceA,EATI,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,KAAR,OACjB,oCAEE,kBAAC,OAAD,CAAMC,GAAE,iBAAmBF,GACxBC,KCADE,EAAY,IAAIC,IAASC,UAAU,CAAEC,sBAAsB,IAyBpDC,GAREC,UAfQ,SAAC,GAAc,IAC9BC,EAD6B,EAAXC,KACJC,cACdC,EAASH,EAAOI,OAAS,kBAAC,EAAD,CAAYb,IAAKS,EAAOI,OAAOC,GAAIb,KAAMQ,EAAOI,OAAOE,WAAe,GAErG,OACE,kBAAC,IAAD,KACE,4BAAKN,EAAOO,OACXJ,EACD,yBACEK,wBAAyB,CAAEC,OAAQf,EAAUgB,SAASV,EAAOW,WAcnD","file":"component---src-templates-recipes-jsx-3dc126babebe439b5a29.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\n// Displays a link to a post author\nconst AuthorLink = ({ uid, name }) => (\n  <span>\n    By:\n    <Link to={`/authors/User_${uid}`}>\n      {name}\n    </Link>\n  </span>\n);\n\nexport default AuthorLink;\n\nAuthorLink.propTypes = {\n  uid: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\n// markdown converter\nimport showdown from 'showdown';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport Layout from '../components/layout';\nimport AuthorLink from '../components/author-link';\n\nconst converter = new showdown.Converter({ ghCompatibleHeaderId: true });\n\nconst RecipeTemplate = ({ data }) => {\n  const recipe = data.strapiRecipes;\n  const author = recipe.Author ? <AuthorLink uid={recipe.Author.id} name={recipe.Author.username} /> : '';\n\n  return (\n    <Layout>\n      <h1>{recipe.Title}</h1>\n      {author}\n      <div\n        dangerouslySetInnerHTML={{ __html: converter.makeHtml(recipe.Body) }}\n      />\n    </Layout>\n  );\n};\n\nexport default RecipeTemplate;\n\nRecipeTemplate.propTypes = {\n  data: PropTypes.shape({\n    strapiRecipes: PropTypes.string,\n  }).isRequired,\n};\n\nexport const query = graphql`\nquery RecipeTemplate($id: String!) {\n  strapiRecipes(id: { eq: $id }) {\n      Title\n      created_at\n      Body\n      Tags\n      id\n      Author {\n        id\n        username\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}