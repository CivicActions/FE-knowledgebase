{"componentChunkName":"component---src-pages-recipes-index-jsx","path":"/recipes/","result":{"data":{"allStrapiRecipe":{"edges":[{"node":{"Title":"First Test Recipe","Body":"## Deploying Node.js apps on Heroku\n\nThe version of Node.js that will be used to run your application on Heroku, should also be defined in your package.json file. You should always specify a Node.js version that matches the runtime you’re developing and testing with. To find your version type node --version.","Tags":"drupal","author":{"username":"cms-admin"},"created_at":"2020-02-21T16:26:14.407Z","id":"Recipe_1"}},{"node":{"Title":"Dark Chocolate Brownies","Body":"Go to the bakery and buy them.","Tags":"accessibility","author":null,"created_at":"2020-02-27T20:25:01.982Z","id":"Recipe_2"}},{"node":{"Title":"Props and PropTypes in React","Body":"React encourages developers to build by breaking a UI up into components. This means there will always be a need to pass data from one component to another — more specifically, from parent to child component — since we’re stitching them together and they rely on one another.\n\nReact calls the data passed between components props and we’re going to look into those in great detail. And, since we’re talking about props, any post on the topic would be incomplete without looking at PropTypes because they ensure that components are passing the right data needed for the job.\n\nWith that, let’s unpack these essential but loaded terms together.","Tags":"accessibility","author":{"username":"cms-admin"},"created_at":"2020-02-29T01:05:54.632Z","id":"Recipe_3"}}]}},"pageContext":{}}}